{"name":"aurelia-react-loader","tagline":"Load React components directly from Aurelia view templates","body":"# aurelia-react-loader\r\nLoad React components directly from Aurelia view templates.\r\n\r\n## Installation\r\nFirst install the loader plugin with jspm.\r\n\r\n```\r\njspm install npm:aurelia-react-loader\r\n```\r\n\r\nThen register the plugin with Aurelia.\r\n\r\n```diff\r\nexport function configure(aurelia) {\r\n  aurelia.use\r\n    .standardConfiguration()\r\n    .developmentLogging()\r\n+   .plugin('aurelia-react-loader');\r\n\r\n  aurelia.start().then(() => aurelia.setRoot());\r\n}\r\n```\r\n\r\n# Use\r\n\r\nImport react components into Aurelia views just like you import a custom element. Just specify the `!react-component` loader after the module name.\r\n\r\nIn `aurelia-view.html`:\r\n```html\r\n<template>\r\n  <require from=\"my-react-component.js!react-component\"></require>\r\n\r\n  <input ref=\"in\" />\r\n  <my-react-component props.bind=\"{ name: in.value, onClick: submit }\"></my-react-component>\r\n</template>\r\n```\r\n\r\nIn `my-react-component.js`:\r\n```jsx\r\nimport React from 'react';\r\n\r\nexport class MyReactComponent extends React.Component {\r\n  render() {\r\n    let { name, onClick } = this.props;\r\n    return (<button onClick={onClick}>Hello, {name}</button>);\r\n  }\r\n}\r\n```\r\n\r\nA few things to note:\r\n* React component names are converted to kebab case for safe use in HTML. `<MyReactComponent foo={bar} />` in jsx becomes `<my-react-component props.bind=\"{foo:bar}\"></my-react-component>` in an HTML Aurelia template.\r\n* Pass props to the React component with the `props` binding. The component will be re-rendered when the binding changes.\r\n* If you need to reference the React component directly it is stored in the `component` property of the custom element's view model. You can use a `ref` binding to access it.\r\n* All functions exported from the required module are assumed to be React components, and wrapped with custom elements. Both stateful and stateless React components are supported.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}